#!/usr/local/bin/php
<?php

# BENCODER v1.1.1 - Shen Cheng-Da (cdsheen@gmail.com)

$title = 'BENCODER v1.1.1 - Encode your PHP script using bcompiler';

function print_usage() {
	global $title;
	print <<<HELP
$title

Usage: bencoder [-f] -o FILE    file1.php
       bencoder [-f] -o OUTDIR  file1.php file2.php ...
       bencoder [-f] -o OUTDIR  -a SRCDIR  [-s SUFFIX] [-c] [-r]

  -f        : force overwriting even if the target exists
  -o FILE   : the file name to write the encoded script
              (default to '-encoded.php' suffix)
  -o OUTDIR : the directory to write all encoded files

  -a SRCDIR : encode all files in this source directory
  -s SUFFIX : encode the files with the SUFFIX extension only (default: php)
  -c        : copy files those shouldn't be encoded (no by default)

  -r        : encode directories recursively (no by default)
              [this function is not implemented yet]


HELP;
	exit;
}

if( !function_exists( 'bcompiler_write_file' ) ) {
	print "ERROR: Please install `bcompiler' before running this encoder\n";
	exit;
}

$suffix = 'php';
$output = $srcdir = '';
$infiles = array();
$force_overwrite = false;

for( $i=1 ; $i < $_SERVER['argc']; $i++ ) {
	if( $_SERVER['argv'][$i] == '-h' ) {
		print_usage();
	}
	elseif( $_SERVER['argv'][$i] == '-f' ) {
		$force_overwrite = true;
	}
	elseif( $_SERVER['argv'][$i] == '-o' ) {
		if( ++$i < $_SERVER['argc'] )
			$output = $_SERVER['argv'][$i];
	}
	elseif( $_SERVER['argv'][$i] == '-a' ) {
		if( ++$i < $_SERVER['argc'] )
			$srcdir = $_SERVER['argv'][$i];
	}
	elseif( $_SERVER['argv'][$i] == '-s' ) {
		if( ++$i < $_SERVER['argc'] )
			$suffix = $_SERVER['argv'][$i];
	}
	elseif( $_SERVER['argv'][$i] == '-r' ) {
		$recursive = true;
	}
	elseif( preg_match( '/^-o(.+)$/', $_SERVER['argv'][$i], $match ) ) {
		$output = $match[1];
	}
	else {
		$infiles[] = $_SERVER['argv'][$i];
	}
}

#print "srcdir: $srcdir\n";

$numfiles = count($infiles);

if( $numfiles > 0 && $srcdir != '' )
	print_usage();

if( $numfiles == 0 && $srcdir == '' )
	print_usage();

if( $srcdir != '' ) {
	if( is_dir($srcdir) && ($dh = opendir($srcdir)) ) {
		while (($file = readdir($dh)) !== false) {
			if( $file == '.' || $file == '..' )
				continue;
			if( is_dir($srcdir.$file) ) {
				if( $recursive ) {
				}
				continue;
			}
			$infiles[] = $file;
		}
		closedir($dh);
		$numfiles = count($infiles);

		print_r($infiles);
	}
	else
		print_usage();
}

if( $numfiles == 1 ) {
	if( $output == '' )
		$output = basename( $infiles[0], '.php' ) . '-encoded.php';
	elseif( is_dir($output) )
		$output = $output.'/'.$infiles[0];
}
elseif( $output == '' || !is_dir($output) ) {
	print_usage();
}	

foreach( $infiles as $infile ) {
	if( $numfiles == 1 && $srcdir == '' )
		$outfile = $output;
	else
		$outfile = "$output/$infile";

	if( $srcdir != '' ) {
		$infile = "$srcdir/$infile";
		if( !preg_match( "/\.$suffix\$/", $infile ) ) {
			if( copy( $infile, $outfile ) )
				printf( "Copied:  %-20s => $outfile\n", $infile );
			else
				printf( "Copied:  %-20s => $outfile (failed)\n", $infile );
			continue;
		}
	}
	bencode( $infile, $outfile );
}

exit;

function bencode( $infile, $outfile ) {
	global $force_overwrite;
	if( !$force_overwrite && file_exists($outfile) ) {
		printf("Skipped: %-20s   ($outfile already exists)\n",$infile);
		return(0);
	}
	$fh = fopen( $outfile, 'w');
	bcompiler_write_header($fh);
	bcompiler_write_file($fh, $infile);
	bcompiler_write_footer($fh);
	fclose($fh);
	printf( "Encoded: %-20s => $outfile\n", $infile );
	return(1);
}

?>
